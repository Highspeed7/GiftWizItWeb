{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/accounts.service.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/left-ribbon/left-ribbon.component.css","webpack:///./src/app/left-ribbon/left-ribbon.component.html","webpack:///./src/app/left-ribbon/left-ribbon.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/window-ref.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions, Headers } from '@angular/http';\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\n\r\nimport { RegisterModel } from './models/register';\r\nimport { LoginLocalModel } from './models/login';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AccountsService {\r\n    public loggedInSrc: Subject<boolean> = new Subject<boolean>();\r\n    public logingedIn$ = this.loggedInSrc.asObservable();\r\n\r\n    private apiUrl: string = \"api/account\";\r\n    private authUrl: string = \"/Token\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    public registerUser(email: string, password: string, confPass: string): Observable<any> {\r\n        var registerObj: RegisterModel = {\r\n            email: email,\r\n            password: password,\r\n            confirmPassword: confPass\r\n        };\r\n\r\n        return this.http.post(`${this.apiUrl}/register`, registerObj);\r\n    }\r\n\r\n    public loginUserLocal(email: string, password: string): Observable<any> {\r\n        var loginObj: LoginLocalModel = {\r\n            username: email,\r\n            password: password,\r\n            grant_type: \"password\"\r\n        };\r\n\r\n        var headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n\r\n        var options = new RequestOptions({ headers: headers });\r\n\r\n        let urlParams = new URLSearchParams();\r\n        urlParams.set('grant_type', loginObj.grant_type);\r\n        urlParams.set('username', loginObj.username);\r\n        urlParams.set('password', loginObj.password);\r\n\r\n        let body = urlParams.toString();\r\n\r\n        return this.http.post(this.authUrl, body, options);\r\n    }\r\n\r\n    public logout() {\r\n        // Get access token\r\n        let access_token = localStorage.getItem(\"access_token\");\r\n        let headers = new Headers();\r\n        headers.append(\"Authorization\", `bearer ${access_token}`);\r\n        let options = new RequestOptions({ headers: headers });\r\n\r\n        return this.http.post(`${this.apiUrl}/logout`, null, options);\r\n    }\r\n\r\n    public getExternalUrl(): Observable<any> {\r\n        // Obtain external urls\r\n        return this.http.get(`${this.apiUrl}/ExternalLogins?returnUrl=/login&generateState=true`);\r\n    }\r\n\r\n    public doSocialLogin(url: string) {\r\n        return this.http.get(`${url}`);\r\n    }\r\n\r\n    public isUserRegistered(access_token: string) {\r\n        return this.http.get(`${this.apiUrl}/UserInfo`, new RequestOptions({ headers: new Headers({ 'Authorization': `Bearer ${access_token}` }) }));\r\n    }\r\n\r\n    public signupExternalUser(access_token: string) {\r\n        var headers = new Headers({\r\n            'content-type': 'application/json',\r\n            'Authorization': `Bearer ${access_token}`\r\n        });\r\n\r\n        return this.http.post(`${this.apiUrl}/RegisterExternal`, null, new RequestOptions({ headers: headers }));\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row top-spacer\\\"></div>\\r\\n<!--TODO: Consider placing within own component-->\\r\\n<nav class=\\\"navbar navbar-expand-sm top-nav\\\">\\r\\n    <a class=\\\"navbar-brand\\\">\\r\\n        <div class=\\\"row logo\\\">\\r\\n            <img src=\\\"../../../Content/Images/gw_logo2.png\\\" />\\r\\n        </div>\\r\\n    </a>\\r\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarText\\\" aria-controls=\\\"navbarText\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarText\\\">\\r\\n        <ul class=\\\"navbar-nav mr-auto\\\"></ul>\\r\\n        <div class=\\\"navbar-text\\\">\\r\\n            <span>Welcome {{username}}</span>\\r\\n            <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"!isLoggedIn\\\">\\r\\n                    <a [routerLink]=\\\"['register']\\\">Register</a>\\r\\n                </li>\\r\\n                <li routerLinkActive=\\\"active\\\" *ngIf=\\\"!isLoggedIn; else elseBlock\\\">\\r\\n                    <a [routerLink]=\\\"['login']\\\">Login</a>\\r\\n                </li>\\r\\n                <ng-template #elseBlock>\\r\\n                    <li>\\r\\n                        <a (click)=\\\"onLogout()\\\">Logout</a>\\r\\n                    </li>\\r\\n                </ng-template>\\r\\n                <!--<li>@Html.ActionLink(\\\"Log in\\\", \\\"Login\\\", \\\"Account\\\", routeValues: null, htmlAttributes: new { id = \\\"loginLink\\\" })</li>-->\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n</nav>\\r\\n<div class=\\\"row-fluid\\\">\\r\\n    <app-left-ribbon></app-left-ribbon>\\r\\n    <div class=\\\"col-sm-10 main-content\\\">\\r\\n        <router-outlet></router-outlet>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { WindowRefService } from './window-ref.service';\r\nimport { AccountsService } from './accounts.service';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\nimport { URLSearchParams } from '@angular/http';\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    public isLoggedIn: boolean = false;\r\n    private window: any;\r\n\r\n    constructor(private windowRef: WindowRefService, private acntSvc: AccountsService, private router: Router, private route: ActivatedRoute) {\r\n        this.window = this.windowRef.nativeWindow;\r\n        this.acntSvc.logingedIn$.subscribe((l: boolean) => {\r\n            this.isLoggedIn = l;\r\n            if (this.window.gw_app.userInfo.username !== undefined) {\r\n                this.username = this.window.gw_app.userInfo.username;\r\n                this.isLoggedIn = true;\r\n            } else {\r\n                this.username = \"Guest\";\r\n            }\r\n        });\r\n    }\r\n\r\n    title = 'app';\r\n    public username: string = \"Guest\";\r\n\r\n    public onLogout() {\r\n        this.acntSvc.logout().subscribe((r: any) => {\r\n            if (r.status === 200) {\r\n                this.acntSvc.loggedInSrc.next(false);\r\n                console.log(r);\r\n                this.isLoggedIn = false;\r\n                localStorage.removeItem(\"access_token\");\r\n                this.router.navigate(['']);\r\n                this.username = \"Guest\";\r\n            }\r\n        });\r\n    }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LeftRibbonComponent } from './left-ribbon/left-ribbon.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { HttpModule } from '@angular/http';\r\n\r\n// Services\r\nimport { AccountsService } from './accounts.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        LeftRibbonComponent,\r\n        RegisterComponent,\r\n        LoginComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        RouterModule.forRoot([\r\n            {\r\n                path: \"register\",\r\n                component: RegisterComponent\r\n            },\r\n            {\r\n                path: \"login\",\r\n                component: LoginComponent\r\n            }\r\n        ])\r\n    ],\r\n    providers: [AccountsService],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"col-sm-2 col-lg-1 ml-5 side-ribbon\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-12 side-ribbon-content\\\">\\r\\n            Content here!\\r\\n        </div>\\r\\n    </div>\\r\\n</div>    \\r\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-left-ribbon',\n  templateUrl: './left-ribbon.component.html',\n  styleUrls: ['./left-ribbon.component.css']\n})\nexport class LeftRibbonComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"alpha-card col-sm-8 mx-auto\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <h5>Login using an existing account.</h5>\\r\\n                <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onLoginSubmit()\\\">\\r\\n                    <div class=\\\"form-group right-vertical-rule\\\">\\r\\n                        <label for=\\\"email\\\">Email: </label>\\r\\n                        <input id=\\\"email\\\"\\r\\n                               type=\\\"text\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               formControlName=\\\"email\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-md-12 d-none d-md-block\\\">\\r\\n                            <span class=\\\"or-divider float-right\\\">-OR-</span>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group right-vertical-rule\\\">\\r\\n                        <label for=\\\"password\\\" style=\\\"position: relative; top: -20px;\\\">Password: </label>\\r\\n                        <input id=\\\"password\\\"\\r\\n                               style=\\\"position: relative; top: -20px;\\\"\\r\\n                               type=\\\"password\\\"\\r\\n                               class=\\\"form-control\\\"\\r\\n                               formControlName=\\\"password\\\" />\\r\\n                    </div>\\r\\n                    <div class=\\\"btn-group\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n                    </div>\\r\\n                </form>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-6\\\">\\r\\n                <h5>Login using one of the below methods.</h5>\\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-12\\\">\\r\\n                        <button class=\\\"btn btn-primary\\\" *ngFor=\\\"let social of socialLogins\\\" (click)=\\\"socialLogin(social.Url)\\\">{{social.Name}}</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { AccountsService } from '../accounts.service';\r\nimport { WindowRefService } from '../window-ref.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { map } from 'rxjs/operators';\r\n \r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    public loginForm: FormGroup;\r\n    public socialLogins = [];\r\n    private window: any;\r\n    // TODO: Ambiguous; will need seperated if more social logins are made possible\r\n    private socialAuthUrl: string = '';\r\n\r\n    constructor(\r\n        private acntSvc: AccountsService,\r\n        private windowRef: WindowRefService,\r\n        private router: Router,\r\n        private route: ActivatedRoute) {\r\n        this.window = this.windowRef.nativeWindow;\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loginForm = new FormGroup(\r\n            {\r\n                'email': new FormControl('', [Validators.required]),\r\n                'password': new FormControl('', [Validators.required])\r\n            }\r\n        )\r\n        this.acntSvc.getExternalUrl().pipe(\r\n            map(response => response.json())\r\n        ).subscribe((r) => {\r\n            this.socialLogins = r;\r\n            // Set the social authorization url\r\n            this.socialAuthUrl = r[0].Url\r\n        });\r\n\r\n        // Catch the access_token in url and verify weather or not the user is registered\r\n        const fragment: string = this.route.snapshot.fragment;\r\n        if (fragment) {\r\n            var access_token = fragment.split(\"access_token=\")[1].split(\"&\")[0];\r\n            if (access_token) {\r\n                this.isUserRegistered(access_token);\r\n            }\r\n        }\r\n    }\r\n\r\n    public onLoginSubmit() {\r\n        let username = this.loginForm.controls.email.value;\r\n        let password = this.loginForm.controls.password.value;\r\n\r\n        this.acntSvc.loginUserLocal(username, password).subscribe((response: any) => {\r\n            let res: any = JSON.parse(response._body);\r\n\r\n            if (res.access_token !== undefined) {\r\n                localStorage.setItem('access_token', res.access_token);\r\n                this.window.gw_app.userInfo.username = res.userName;\r\n                this.acntSvc.loggedInSrc.next(true);\r\n                this.router.navigate(['/']);\r\n            }\r\n        });\r\n    }\r\n\r\n    public socialLogin(url: string) {\r\n        // set the url for use elsewhere.\r\n        this.socialAuthUrl = url;\r\n        this.window.location.href = this.socialAuthUrl;\r\n    }\r\n\r\n    private isUserRegistered(access_token: string) {\r\n        this.acntSvc.isUserRegistered(access_token).pipe(\r\n            map(response => response.json())\r\n        ).subscribe((result: any) => {\r\n            if (result.HasRegistered) {\r\n                localStorage.setItem('access_token', access_token);\r\n                this.window.gw_app.userInfo.username = result.Email;\r\n                this.acntSvc.loggedInSrc.next(true);\r\n                this.router.navigate(['/']);\r\n            } else {\r\n                this.acntSvc.signupExternalUser(access_token).subscribe((response: any) => {\r\n                    this.window.location.href = this.socialAuthUrl;\r\n                });\r\n            }\r\n        });\r\n    }\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6 alpha-card mx-auto\\\">\\r\\n        <h5>Please Register</h5>\\r\\n        <form [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onRegisterSubmit()\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"email\\\">Email: </label>\\r\\n                <input id=\\\"email\\\"\\r\\n                       class=\\\"form-control\\\"\\r\\n                       type=\\\"text\\\"\\r\\n                       name=\\\"email\\\"\\r\\n                       formControlName=\\\"email\\\" />\\r\\n                <div \\r\\n                     class=\\\"alert alert-danger\\\" \\r\\n                     *ngIf=\\\"registerForm.get('email').errors?.required === true \\r\\n                     && registerForm.get('email').touched\\\">Email is required.</div>\\r\\n                <label for=\\\"password\\\">Password: </label>\\r\\n                <input id=\\\"password\\\"\\r\\n                       class=\\\"form-control\\\"\\r\\n                       type=\\\"password\\\"\\r\\n                       name=\\\"password\\\"\\r\\n                       formControlName=\\\"password\\\" />\\r\\n                <div\\r\\n                     class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"registerForm.get('password').errors?.required === true &&\\r\\n                     registerForm.get('password').touched\\\">\\r\\n                    Password is required.\\r\\n                </div>\\r\\n                <label for=\\\"confpass\\\">Confirm Password: </label>\\r\\n                <input id=\\\"confpass\\\"\\r\\n                       class=\\\"form-control\\\"\\r\\n                       type=\\\"password\\\"\\r\\n                       name=\\\"confpass\\\"\\r\\n                       formControlName=\\\"confPass\\\" />\\r\\n                <div\\r\\n                     class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"registerForm.get('confPass').errors?.required === true &&\\r\\n                     registerForm.get('confPass').touched\\\">\\r\\n                    Confirm Password is required.\\r\\n                </div>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-primary\\\">Submit</button>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { AccountsService } from \"../accounts.service\";\r\n\r\nimport { RegisterModel } from '../models/register';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-register',\r\n    templateUrl: './register.component.html',\r\n    styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n    public registerForm: FormGroup;\r\n\r\n    constructor(private accntSvc: AccountsService, private router: Router) { }\r\n\r\n    ngOnInit() {\r\n        this.registerForm = new FormGroup(\r\n            {\r\n                'email': new FormControl('', [Validators.required, Validators.email]),\r\n                'password': new FormControl('', [Validators.required]),\r\n                'confPass': new FormControl('', [Validators.required])\r\n            }\r\n        );\r\n    }\r\n\r\n    public onUsernameChange(elem: any) {\r\n        // Check if username available\r\n        console.log(elem);\r\n    }\r\n\r\n    public onRegisterSubmit() {\r\n        var username = this.registerForm.controls.email.value;\r\n        var password = this.registerForm.controls.password.value;\r\n        var confPass = this.registerForm.controls.confPass.value;\r\n\r\n        this.accntSvc.registerUser(username, password, confPass).subscribe((response) => {\r\n            console.log(response);\r\n            this.router.navigate(['login']);\r\n        });\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\nfunction getWindow(): any {\n    return window;\r\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowRefService {\n\n    get nativeWindow(): any {\n        return getWindow();\r\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}